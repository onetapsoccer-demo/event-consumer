quarkus.kafka.devservices.shared=true

quarkus.log.category."com.redhat".level=ALL

quarkus.http.cors=true
quarkus.http.cors.origins=*

quarkus.http.filter.static.header."Access-Control-Allow-Origin"=*
quarkus.http.filter.static.methods=GET,POST
quarkus.http.filter.static.matches=/*

quarkus.micrometer.binder-enabled-default=false
quarkus.micrometer.binder.http-server.enabled=false

mp.messaging.connector.smallrye-kafka.security.protocol=SASL_PLAINTEXT
mp.messaging.connector.smallrye-kafka.sasl.mechanism=SCRAM-SHA-512
mp.messaging.connector.smallrye-kafka.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username=\"${kafka.user}\" password=\"${kafka.pwd}\";
mp.messaging.outgoing.events.connector=smallrye-kafka
mp.messaging.outgoing.events.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer

%dev.kafka.bootstrap.servers=${bootstrap.url}
%dev.mp.messaging.connector.smallrye-kafka.ssl.truststore.location=/tmp/client-truststore.jks
%dev.mp.messaging.connector.smallrye-kafka.ssl.truststore.password=kafka1
%dev.mp.messaging.connector.smallrye-kafka.security.protocol=SASL_SSL
%dev.mp.messaging.connector.smallrye-kafka.sasl.mechanism=SCRAM-SHA-512
%dev.mp.messaging.connector.smallrye-kafka.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username=\"${kafka.user}\" password=\"${kafka.pwd}\";

kafka.bootstrap.servers=my-cluster-kafka-bootstrap:9092

quarkus.ssl.native=true

quarkus.kubernetes-client.trust-certs=true

quarkus.openshift.env.vars.kafka-bootstrap-servers=my-cluster-kafka-bootstrap.my-kafka.svc:9092
quarkus.openshift.route.expose=true
quarkus.openshift.env.vars.ab-jolokia-off=true
quarkus.openshift.env.configmaps=jaas-config